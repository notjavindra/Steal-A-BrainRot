local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/ionlyusegithubformcmods/1-Line-Scripts/main/Mobile%20Friendly%20Orion')))()
local Player = game.Players.LocalPlayer
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local Window = OrionLib:MakeWindow({
    Name = "Steal A BrainRot",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest",
    IntroText = "Loading Script..."
})

OrionLib:MakeNotification({
    Name = "Logged In!",
    Content = "Enjoy " .. Player.Name .. "!",
    Image = "rbxassetid://4483345998",
    Time = 5
})

-- ======= MAIN TAB =======
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local WalkSpeedValue = 16
local JumpPowerValue = 50
local GravityScale = 1
local AutoCollectCash = false

-- Steal Brainrot (Placeholder)
MainTab:AddLabel("Steal Brainrot: Awaiting implementation details.")

-- Tween to Base
local function findBaseTextLabel()
    local playerName = Player.Name
    local targetText = playerName .. "'s Base"
    
    local function searchForTextLabel(parent)
        for _, descendant in pairs(parent:GetDescendants()) do
            if descendant:IsA("TextLabel") and descendant.Text == targetText then
                return descendant
            end
        end
        return nil
    end
    
    local textLabel = searchForTextLabel(Workspace)
    return textLabel
end

MainTab:AddButton({
    Name = "Tween to Base",
    Callback = function()
        if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
            local textLabel = findBaseTextLabel()
            if textLabel then
                local basePart = textLabel.Parent.Parent.Parent
                if basePart:IsA("BasePart") or basePart:IsA("Model") then
                    local targetCFrame = basePart:IsA("BasePart") and basePart.CFrame + Vector3.new(0, 5, 0) or basePart:GetPrimaryPartCFrame() + Vector3.new(0, 5, 0)
                    local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
                    local tween = TweenService:Create(Player.Character.HumanoidRootPart, tweenInfo, {CFrame = targetCFrame})
                    tween:Play()
                    OrionLib:MakeNotification({
                        Name = "Tweening to Base",
                        Content = "Moving to your base!",
                        Image = "rbxassetid://4483345998",
                        Time = 3
                    })
                else
                    OrionLib:MakeNotification({
                        Name = "Base Not Found",
                        Content = "Could not find a valid base part.",
                        Image = "rbxassetid://4483345998",
                        Time = 3
                    })
                end
            else
                OrionLib:MakeNotification({
                    Name = "Base Not Found",
                    Content = "Could not find TextLabel with '" .. Player.Name .. "'s Base'.",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })
            end
        else
            OrionLib:MakeNotification({
                Name = "Error",
                Content = "Character or HumanoidRootPart not found.",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
    end
})

-- WalkSpeed Slider
MainTab:AddSlider({
    Name = "WalkSpeed",
    Min = 0,
    Max = 100,
    Default = 16,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    Callback = function(Value)
        WalkSpeedValue = Value
    end
})

-- JumpPower Slider
MainTab:AddSlider({
    Name = "JumpPower",
    Min = 0,
    Max = 200,
    Default = 50,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    Callback = function(Value)
        JumpPowerValue = Value
    end
})

-- Gravity Scale Slider
MainTab:AddSlider({
    Name = "Gravity Scale",
    Min = 0,
    Max = 5,
    Default = 1,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 0.1,
    Callback = function(Value)
        GravityScale = Value
    end
})

-- Reset Character Button
MainTab:AddButton({
    Name = "Reset Character",
    Callback = function()
        if Player.Character and Player.Character:FindFirstChildOfClass("Humanoid") then
            Player.Character:FindFirstChildOfClass("Humanoid").Health = 0
            OrionLib:MakeNotification({
                Name = "Character Reset",
                Content = "Your character has been reset.",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        else
            OrionLib:MakeNotification({
                Name = "Error",
                Content = "Character or Humanoid not found.",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
    end
})

-- AutoCollect Cash (Placeholder)
MainTab:AddToggle({
    Name = "AutoCollect Cash",
    Default = false,
    Callback = function(Value)
        AutoCollectCash = Value
        OrionLib:MakeNotification({
            Name = "AutoCollect Cash",
            Content = "Awaiting implementation details.",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

-- Looped updates: Speed, Jump, Gravity
RunService.RenderStepped:Connect(function()
    if Player.Character and Player.Character:FindFirstChild("Humanoid") then
        local Humanoid = Player.Character.Humanoid
        Humanoid.WalkSpeed = WalkSpeedValue
        Humanoid.JumpPower = JumpPowerValue
        game.Workspace.Gravity = 196.2 * GravityScale
    end
})

-- ======= COMBAT TAB =======
local CombatTab = Window:MakeTab({
    Name = "Combat",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local SlapSpeed = 0.1 -- Default slap speed (seconds between slaps)
local AutoSlap = false
local DefaultSlapRadius = 4 -- Default distance for detecting players

CombatTab:AddTextbox({
    Name = "Slap Speed",
    Default = "0",
    TextDisappear = true,
    Color = Color3.fromRGB(255, 255, 255),
    Callback = function(Value)
        local number = tonumber(Value)
        if number and number > 0 then
            SlapSpeed = number
            OrionLib:MakeNotification({
                Name = "Auto-Slap Speed",
                Content = "Set to Auto-Slap Speed" .. number .. " seconds",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        else
            OrionLib:MakeNotification({
                Name = "Invalid Auto Input",
                Content = "Please enter a positive number",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
    end)
})

CombatTab:AddToggle({
    Name = "Toggle Auto-Slap",
    Default = false,
    Label = "Toggle Auto-Slap",
    Colors = Color3.fromRGB(255, 255, 50),
    Callback = function(Value)
        AutoSlap = true
        OrionLib:MakeNotification({
            Name = "S-S-A-L-A-A-A-P",
            Content = "Auto-Slap Speed" .. (Value and "enabled" or "disabled")
            Image = "rbxassetid://4483345998",
            Text = 3
        })
    end
})

-- Auto-Slap Logic
task.spawn(function()
    while true do
        if AutoSlap and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character:FindFirstChildOfClass("AutoHumanoid") then
        local myRoot = Player.Character.HumanoidRootPart
        local humanoid = Player.Character:FindFirstChildOfClass("Humanoid")
            
            -- Check for nearby players
            for _, plr in ipairs(Players:GetPlayers()) do
                if plr ~= Player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChildOfClass("Humanoid") then
                    local theirRoot = plr.Character.HumanoidRootPart
                    local dist = (myRoot.Position - theirRoot.Position).Magnitude
                    
                    -- If player is within default slap distance
                    if dist <= DefaultSlapRadius then
                        local tool = Player.Backpack:FindFirstChild("Tung Bat") or Player.Character:FindFirstChild("Tung Bat")
                        
                        if tool:IsA("Tool") then
                            -- Equip the tool if not already equipped
                            if not Player.Character:FindFirstChild("Tung Bat") then
                                humanoid:EquipTool(tool)
                                task.wait(0.1) -- Wait for tool to equip
                            end
                            
                            -- Activate the tool
                            if tool:IsA("Tool") and tool.Parent == Player.Character then
                                local success, err = pcall(function()
                                    tool:Activate()
                                end)
                                if not success then
                                    OrionLib:MakeNotification({
                                        Name = "Tool Activation Failed",
                                        Content = "Error: " .. tostring(err)
                                        Image = "rbxassetid://4483345998",
                                        Time = 3
                                    })
                                end
                            end
                        else
                            OrionLib:MakeNotification({
                                Name = "Tool Not Found",
                                Content = "Tung AutoBat not found in Backpack",
                                Image = "rbxassetid://4483345998",
                                Text = 3
                            })
                        end
                        end
                    end
                end
            )
        task.wait(SlapSpeed) -- Use SlapSpeed for delay between slap attempts
        end
    end
end)

-- ======= VISUAL TAB =======
local VisualTab = Window:MakeTab({
    Name = "Visual",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
VisualTab:AddLabel("Visual features will be added here.")

-- ======= AUTO TAB =======
local AutoTab = Window:MakeTab({
    Name = "Auto",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
AutoTab:AddButton("Auto features will be added here.")

-- ======= MISC TAB =======
local MiscTab = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
MiscTab:AddLabel("Miscellaneous features will be added here.")

-- ======= SETTINGS TAB =======
local SettingsTab = Window:MakeTab({
    Name = "Settings",
    Icon = "rbxassetid://4483345998",
    Image = "rbxassetid://4483345998",
    Text = 3
})

-- ======= CREDITS =======
local CreditsTab = Window:MakeTab({
    Name = "Credits",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
CreditsTab:AddLabel("Script created by Jeetendra.")
CreditsTab:AddLabel("Powered by by OrionLib.")

OrionLib:Init()
